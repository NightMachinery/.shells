#!/usr/bin/env zsh
##
tic -x -o ~/.terminfo "$NIGHTDIR"/setup/terminfo-24bit.src
# https://www.gnu.org/software/emacs/manual/html_node/efaq/Colors-on-a-TTY.html
#
# https://gist.github.com/algal/9fc1d9a1b3f35f84e94937eef90887c7
# if your system already has the terminal
# type `xterm-direct` installed (which you can check with `toe -a`),
# then you can get 24 bit color by setting the environment
# variable `TERM=xterm-direct` before running emacs.
#
# ❯ TERM=xterm-direct emacsclient -t
# *ERROR*: Cannot open terminfo database file
# https://emacs.stackexchange.com/questions/51100/emacs-cannot-open-terminfo-database-file
# https://github.com/kovidgoyal/kitty/issues/423
# The way to test if terminfo is accessible is to run `TERM=xterm-direct infocmp`. If it outputs the terminal description, it is accessible. If it does not then you have to install it. On local machines it is always accessible, since kitty sets the TERMINFO env var to its location, unless you override the TERMINFO env var in your shell startup scripts.
##

# git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim

curl https://cht.sh/:cht.sh > ~/bin/cht.sh
chmod +x ~/bin/cht.sh
###
conda install -y -c eumetsat expect
conda install -y -c plotly plotly-orca # also can be installed via npm
conda install -y -c numba icc_rt
##
gem specific_install -l https://github.com/NightMachinary/fyodor.git
##
pig https://github.com/NightMachinary/BrishGarden.git
pig git@github.com:NightMachinary/brish.git

pi git+https://github.com/n8henrie/pycookiecheat.git@dev

pi git+git://github.com/fretboardfreak/kitty-theme-changer.git@master

pip install git+git://github.com/reinderien/mimic.git
###
nimble install --accept https://github.com/NightMachinary/htmlmetadata

nimble install --accept "git://github.com/AmanoTeam/Unalix-nim"
##
npmi unibeautify @unibeautify/beautifier-prettydiff @unibeautify/cli
npmi get-stdin@8
##
brew tap lutzifer/homebrew-tap
brew install keyboardSwitcher

brew tap trojan-gfw/homebrew-trojan
brew install trojan

brew install --head googler

brew install --head tdlib

brew install dart-lang/dart/dart
dart --disable-analytics

brew install ms-jpq/sad/sad
##
# https://superuser.com/questions/545889/how-can-i-install-gnu-parallel-alongside-moreutils
brew install --force moreutils
brew unlink moreutils
brew install --force parallel
brew link --overwrite moreutils
brew unlink parallel
brew link --overwrite parallel
echo 'will cite' | command parallel --citation 1> /dev/null 2> /dev/null
##
brew install dasht
# para $proxyenv dasht-docsets-install -f ::: css html bash # didn't work
re '$proxyenv dasht-docsets-install -f' css html bash
##
luarocks install penlight # require 'pl.pretty'.dump(table)
luarocks install luaposix
##
