#!/usr/bin/env zsh
mkdir -p ~/bin

mkdir -p ~/.ssh/sockets/

ln -s ~/.nvimrc ~/.config/nvim/init.vim
##
zsh_alt_path='/opt/homebrew/bin/zsh'
if isArm && test -e "$zsh_alt_path" ; then
    sudo ln -fs "${zsh_alt_path}" /usr/local/bin/zsh
fi
##
lnrp $NIGHTDIR/configFiles/kitty/kitty.conf ~/.config/kitty/
if isMe ; then
    lnrp $NIGHTDIR/configFiles/kitty/me.conf ~/.kitty_custom_1.conf
fi
lnrp $NIGHTDIR/configFiles/kitty/diff.conf ~/.config/kitty/
lnrp $NIGHTDIR/configFiles/kitty/open-actions.conf ~/.config/kitty/

lnrp $NIGHTDIR/configFiles/kitty/themes/night-solarized-light.conf ~/.config/kitty/kitty-themes/themes/
kitty-theme-setup
if ! test -e ~/.config/kitty/theme.conf ; then
    lnrp $NIGHTDIR/configFiles/kitty/themes/night-solarized-light.conf ~/.config/kitty/theme.conf
fi
##
gallery_dl_conf="$nightNotes/private/configs/gallery-dl/.gallery-dl.conf"
if test -e "$gallery_dl_conf" ; then
    lnrp $gallery_dl_conf ~/.gallery-dl.conf
fi
##
if test -e ~/.config/ranger ; then
    ecerr "~/.config/ranger exists"
else
    lnrp $NIGHTDIR/configFiles/ranger ~/.config/ranger
fi
##
if isDarwin; then
    # anaconda also has an old pandoc binary, so we need to prioritize the one installed by brew
    lnrp "${brew_bin_dir}/pandoc" ~/bin
fi
##
ln -s "$HOME/Downloads/" ~/"$music_dir"/d
# ln -s "$HOME/Downloads/Telegram Desktop/" ~/"$music_dir"/td
##
# ln -s /home/linuxbrew/.linuxbrew/bin/nvim /usr/local/bin/nvim
##
local ln_orig="$functions[ln]"
{
    if ! isMBP ; then
        # @linux the owner and group of /usr/local and all subdirectories (including bin) should be root.root and the permissions should be rwxr-xr-x. This means that users of the system can read and execute in (and from) this directory structure, but cannot create or edit files there.
        #
        # @me I have changed the perms of this dir so that it is owned by me.

        functions[ln]='sudo ln "$@"'
    fi

    lnrp zshplain.dash /usr/local/bin/

    lnrp bicon_zsh.dash /usr/local/bin/

    lnrp ffscrollback.sh /usr/local/bin/
    lnrp emacs_scrollback.sh /usr/local/bin/
    lnrp wait4user.sh /usr/local/bin/

    lnrp brishz.dash /usr/local/bin/
    lnrp brishz2.dash /usr/local/bin/
    lnrp brishz_para.dash /usr/local/bin/
    lnrp brishzrb.dash /usr/local/bin/
    lnrp brishzq.zsh /usr/local/bin/
    lnrp bsh.dash /usr/local/bin/

    lnrp fzf_mru.sh /usr/local/bin/

    if isDarwin ; then
        lnrp ~/.cargo/bin/input_lang_get_icon /usr/local/bin/
    fi
} always {
    fnrestore ln "$ln_orig"
}
##
gnu-prefix-fix
## blcs
# blc tag-ag tag tag-ag
##
if isMe ; then
    local symlinkme_dir="$NIGHTDIR/symlinkme"
    local symlinkme_all_dir="${symlinkme_dir}/all"
    local symlinkme_local_dir="${symlinkme_dir}/local"
    local symlinkme_server_dir="${symlinkme_dir}/servers"

    if isLocal ; then
        lnrp "${symlinkme_local_dir}/.gitconfig" ~/.gitconfig
    else
        lnrp "${symlinkme_server_dir}/.gitconfig" ~/.gitconfig
    fi

    lnrp "${symlinkme_all_dir}/power_shell/profile.ps1" ~/.config/powershell/profile.ps1

    lnrp "${symlinkme_all_dir}/zathura/zathurarc" ~/.config/zathura/zathurarc
fi
##
